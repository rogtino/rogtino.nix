# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  # pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  # boot.kernelParams = ["rtw88_pci.disable_aspm=Y"];
  # TODO:use rtw88 instead
  boot.extraModulePackages = with config.boot.kernelPackages; [rtl8821ce];
  boot.blacklistedKernelModules = ["rtw88_8821ce"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/8380f0ba-b038-4cfe-9faa-2e0c976c03bd";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/C94B-328E";
    fsType = "vfat";
  };

  fileSystems."/home/gus/book" = {
    device = "/dev/disk/by-uuid/9b6e4cf1-7301-4188-8300-03d8f16ef44a";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/84b0a1fb-364d-49f1-94fd-4b0a9c7d4131";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
