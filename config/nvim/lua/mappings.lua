vim.keymap.set('n', '<leader>td', '<cmd>SwitchTheme dark<CR>', { desc = 'toggle random dark theme' })
vim.keymap.set('n', '<leader>tl', '<cmd>SwitchTheme light<CR>', { desc = 'toggle random light theme' })
vim.keymap.set('n', '<leader>hd', '<cmd>NoiceDismiss<CR>', { desc = 'dismiss noice' })
vim.keymap.set('n', '<leader>hi', function()
  vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled {})
end, { desc = 'toggle inlay_hint' })
vim.keymap.set('n', '<leader>ts', '<cmd>InspectTree<CR>', { desc = 'open treesitter tree' })
-- vim.keymap.set('n', '<C-j>', ':m+1<CR>')
-- vim.keymap.set('n', '<C-k>', ':m-2<CR>')
-- vim.keymap.set('i', '<C-j>', '<esc>:m+1<CR>')
-- vim.keymap.set('i', '<C-k>', '<esc>:m-2<CR>')
-- vim.keymap.set('v', '<C-j>', ":m '>+1<CR>gv")
-- vim.keymap.set('v', '<C-k>', ":m '<-2<CR>gv")
vim.keymap.set('n', '<esc>', '<esc><cmd>noh<cr>')
vim.keymap.set('n', '<c-q>', '<cmd>q<CR>')
-- vim.keymap.set("n", "<leader>a", "ggVG", { desc = "select all content" })
vim.keymap.set('n', '<leader>q', vim.cmd.q, { desc = 'quit' })
vim.keymap.set('n', '<c-s>', vim.cmd.w, { desc = 'write', silent = true })
vim.keymap.set({ 'i', 'v' }, '<c-s>', '<esc>:w<CR>', { desc = 'write' })
vim.keymap.set('n', '<leader>hl', vim.cmd.Lazy, { desc = 'open-lazy' })
vim.keymap.set('n', '<leader>.', ':so%<CR>')
-- vim.keymap.set("n", "<C-j>", "<c-w>j", { silent = true })
-- vim.keymap.set("n", "<C-k>", "<c-w>k", { silent = true })
-- vim.keymap.set("n", "<C-h>", "<c-w>h", { silent = true })
-- vim.keymap.set("n", "<C-l>", "<c-w>l", { silent = true })
vim.keymap.set({ 'n', 'x' }, 'gw', '*N', { desc = 'Search word under cursor' })
vim.keymap.set({ 'n', 'x', 'o' }, 'n', "'Nn'[v:searchforward]", { expr = true, desc = 'Next search result' })
vim.keymap.set({ 'n', 'x', 'o' }, 'N', "'nN'[v:searchforward]", { expr = true, desc = 'Prev search result' })
vim.keymap.set('v', '<', '<gv')
vim.keymap.set('v', '>', '>gv')
vim.keymap.set('v', 'J', '5j')
vim.keymap.set('v', 'K', '5k')
vim.keymap.set('n', '<leader>ll', vim.cmd.LuaSnipEdit, { desc = 'edit LuaSnip' })
vim.keymap.set('i', '<A-;>', '<End>;<ENTER>', { desc = 'insert ; in this line' })
vim.keymap.set('n', '<leader>ws', '<c-w>s', { desc = 'split window' })
vim.keymap.set('n', '<leader>wv', '<c-w>v', { desc = 'vertical split window' })
vim.keymap.set('n', '<c-h>', '<c-w>h', { desc = 'move to window left' })
vim.keymap.set('n', '<c-j>', '<c-w>j', { desc = 'move to window below' })
vim.keymap.set('n', '<c-k>', '<c-w>k', { desc = 'move to window up' })
vim.keymap.set('n', '<c-l>', '<c-w>l', { desc = 'move to window right' })
vim.keymap.set('i', '<c-h>', '<esc><c-w>h', { desc = 'move to window left' })
vim.keymap.set('i', '<c-j>', '<esc><c-w>j', { desc = 'move to window below' })
vim.keymap.set('i', '<c-k>', '<esc><c-w>k', { desc = 'move to window up' })
vim.keymap.set('i', '<c-l>', '<esc><c-w>l', { desc = 'move to window right' })
vim.keymap.set('n', '=', '<c-w>>')
vim.keymap.set('n', '-', '<c-w><')
vim.keymap.set('n', '+', '<c-w>+')
vim.keymap.set('n', '_', '<c-w>-')
vim.keymap.set('n', '<a-x>', ':')

-- vim.keymap.set({ "o", "x" }, "ac", "<cmd>lua require('various-textobjs').multiCommentedLines()<CR>")
vim.keymap.set('n', 'K', function()
  local winid = require('ufo').peekFoldedLinesUnderCursor()
  if not winid then
    if next(vim.lsp.get_clients { bufnr = 0 }) then
      vim.cmd.Lspsaga 'hover_doc'
    else
      local word = vim.fn.expand '<cword>'
      vim.cmd('Man ' .. word)
    end
  end
end, { desc = 'magic K' })

vim.keymap.set('t', '<esc>', [[<C-\><C-n>]])
vim.keymap.set('t', '<C-h>', [[<Cmd>wincmd h<CR>]])
vim.keymap.set('t', '<C-j>', [[<Cmd>wincmd j<CR>]])
vim.keymap.set('t', '<C-k>', [[<Cmd>wincmd k<CR>]])
vim.keymap.set('t', '<C-l>', [[<Cmd>wincmd l<CR>]])
-- vim.keymap.set("t", "<C-w>", [[<C-\><C-n><C-w>]])
